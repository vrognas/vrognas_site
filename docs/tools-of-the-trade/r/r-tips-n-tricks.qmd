---
title: "R Tips-n-Tricks"
---

## Useful/interesting R packages

* validate
* lemon
* naniar
    * `gg_miss_var()`
    * `gg_miss_upset()` (instead of venn diagrams)
    * `geom_miss_point()` (jitter of missing)
    * `bind_shadow()`
    * `vis_miss()` (Credit: Iris Minichmayr)
* ggpmisc (linear regression equation)
* ggstatplot
* ”future” — r-package for cluster and parallell in r
* ”furrr” — future:ize the purrr-functions
* Targets
* Renv
* Roxygen2
* Usethis
* Devtools
* latticeExtra
* tidymodels
    * [A Gentle Introduction to tidymodels](https://rviews.rstudio.com/2019/06/19/a-gentle-intro-to-tidymodels/)

### Max Kuhn Keynote on tidymodels

<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/ATcG_BBiFYQ?si=kLnxdNIYQ4AmhlDY&amp;start=23368" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

## Useful functions

### Show ALL duplicate values

```r
df |>
group_by(ID) |>
filter(
  duplicated(COV) |
  duplicated(COV, fromLast = TRUE)
)
```

### Find first occurence of a non-NA

```r
df$col1[which.max(!is.na(col2))]
```

### Pipe into View(), with title

```r
df |>
  filter |>
  group_by |>
  View("df")
```
## Rmarkdown

* ref.label=c()
    * [](https://bookdown.org/yihui/rmarkdown-cookbook/reuse-chunks.html#ref-label)

## R-Style

* 80 characters per line
* 150 lines per script

## Misc

* Use `sink()` to record output of script
* Use `locate()` instead of `select(col, everything())`
* R-tips
    * [Paul van der Laken](https://paulvanderlaken.com/2018/05/21/r-tips-and-tricks/)
    * [Benjamin Guiastrennec](https://guiastrennec.gitbooks.io/r-notes/content/)


* txtProgressBar
    * (single=3)
* If write files on cluster for use in next step
    * `sys.sleep(3)`
* Bang Bang – How to program with dplyr
    * [Markus Berroth: How to program with dplyr (2019)](https://www.statworx.com/de/blog/bang-bang-how-to-program-with-dplyr/)
* Fundamentals of Data Visualization, Claus O. Wilke
    * [serialmentor.com](https://serialmentor.com/dataviz/)
* David Robinson:
    * libr
    * ggplot:
        * `theme_set(theme_bw())`
        * `mutate(a_col = fct_reorder(a_col, by)) %>% ggplot()`
        * `ggplot(aes(fill = x)) + theme(legend.position = “none”)`
        * `expand_limits(y = 0) #to include 0 on the y axis`
        * `scale_y_continuous(labels = scales::dollar_format())`
            * `scales::percent_format()`
        * `ggplot(label=a_column)` `plotly::ggplotly(ggplot_object)`
* `library(Hmisc, include.only = '%nin%')`
    * use `%in%` to make `1==NA` equal `FALSE` and not `NA`
    * Also check for NAs
        * any: `NA %in% vector`
        * sum: `vector %in% NA %>% sum`
